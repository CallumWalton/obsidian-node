#cloud-config
# Obsidian Command & Control Server CloudInit Configuration
# For Ubuntu 24.04 LTS on Hetzner Cloud CX31 or equivalent
# 
# This cloud-init configuration will:
# 1. Set up the server with proper security
# 2. Download and execute the C&C bootstrap script
# 3. Configure all required services automatically
#
# Required variables (set via cloud provider metadata or environment):
# - GITHUB_PAT_TOKEN: Personal Access Token for GitHub repository access
# - DOMAIN: Your domain name (e.g., cnc.obsidian.example.com)
# - EMAIL: Your email for Let's Encrypt certificates
# - DB_PASSWORD: PostgreSQL/Keycloak database password
# - KEYCLOAK_ADMIN_PASSWORD: Keycloak admin password
# - GRAFANA_ADMIN_PASSWORD: Grafana admin password
# - ADMIN_EMAIL: Administrator email for notifications
# - SMTP_HOST: SMTP server for email notifications
# - SMTP_USER: SMTP username
# - SMTP_PASSWORD: SMTP password
# Note: S3 backups are currently disabled

# Package management
package_update: true
package_upgrade: true
packages:
  - curl
  - wget
  - git
  - htop
  - vim
  - unattended-upgrades
  - python3
  - python3-pip

# Users
users:
  - name: obsidian
    groups: [adm, docker, sudo]
    sudo: ['ALL=(ALL) NOPASSWD:ALL']
    shell: /bin/bash
    ssh_authorized_keys:
      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC... # Replace with your SSH public key

# SSH hardening
ssh_keys:
  rsa_private: |
    -----BEGIN OPENSSH PRIVATE KEY-----
    # Your private key here (optional, for automated management)
    -----END OPENSSH PRIVATE KEY-----

# Hostname and timezone
hostname: obsidian-cnc
timezone: UTC

# Automatic security updates
write_files:
  # Unattended upgrades configuration
  - path: /etc/apt/apt.conf.d/50unattended-upgrades
    content: |
      Unattended-Upgrade::Allowed-Origins {
          "${distro_id}:${distro_codename}";
          "${distro_id}:${distro_codename}-security";
          "${distro_id}ESMApps:${distro_codename}-apps-security";
          "${distro_id}ESM:${distro_codename}-infra-security";
      };
      Unattended-Upgrade::DevRelease "auto";
      Unattended-Upgrade::Remove-Unused-Kernel-Packages "true";
      Unattended-Upgrade::Remove-New-Unused-Dependencies "true";
      Unattended-Upgrade::Remove-Unused-Dependencies "true";
      Unattended-Upgrade::Automatic-Reboot "true";
      Unattended-Upgrade::Automatic-Reboot-Time "02:00";
    permissions: '0644'

  # Environment variables for the bootstrap script
  - path: /opt/obsidian-env
    content: |
      export GITHUB_PAT_TOKEN="${GITHUB_PAT_TOKEN:-ghp_your_pat_token_here}"
      export DOMAIN="${DOMAIN:-cnc.obsidian.local}"
      export EMAIL="${EMAIL:-admin@example.com}"
      export DB_PASSWORD="${DB_PASSWORD:-$(openssl rand -base64 32)}"
      export KEYCLOAK_ADMIN_PASSWORD="${KEYCLOAK_ADMIN_PASSWORD:-$(openssl rand -base64 32)}"
      export WG_NETWORK_CIDR="${WG_NETWORK_CIDR:-10.0.0.0/24}"
      export WG_SERVER_IP="${WG_SERVER_IP:-10.0.0.1}"
      export WG_PORT="${WG_PORT:-51820}"
      export GRAFANA_ADMIN_PASSWORD="${GRAFANA_ADMIN_PASSWORD:-$(openssl rand -base64 32)}"
      # S3 backups disabled for now
      # export S3_BUCKET="${S3_BUCKET:-obsidian-backups}"
      # export S3_ACCESS_KEY="${S3_ACCESS_KEY:-your-access-key}"
      # export S3_SECRET_KEY="${S3_SECRET_KEY:-your-secret-key}"
      # export S3_ENDPOINT="${S3_ENDPOINT:-https://s3.eu-central-1.hetzner-cloud.com}"
      export ADMIN_EMAIL="${ADMIN_EMAIL:-admin@example.com}"
      export SMTP_HOST="${SMTP_HOST:-smtp.example.com}"
      export SMTP_PORT="${SMTP_PORT:-587}"
      export SMTP_USER="${SMTP_USER:-noreply@example.com}"
      export SMTP_PASSWORD="${SMTP_PASSWORD:-smtp-password}"
    permissions: '0600'
    owner: root:root

  # SSH configuration hardening
  - path: /etc/ssh/sshd_config.d/obsidian-hardening.conf
    content: |
      # Obsidian SSH Security Configuration
      Protocol 2
      PermitRootLogin no
      PasswordAuthentication no
      PubkeyAuthentication yes
      AuthorizedKeysFile .ssh/authorized_keys
      PermitEmptyPasswords no
      ChallengeResponseAuthentication no
      UsePAM yes
      X11Forwarding no
      PrintMotd no
      ClientAliveInterval 300
      ClientAliveCountMax 2
      AllowUsers obsidian
      MaxAuthTries 3
      MaxSessions 2
    permissions: '0644'

  # System monitoring script
  - path: /opt/system-monitor.sh
    content: |
      #!/bin/bash
      # Basic system monitoring for cloud-init deployment
      
      echo "=== Obsidian C&C Server Status ===" > /var/log/obsidian-status.log
      echo "Deployment time: $(date)" >> /var/log/obsidian-status.log
      echo "Hostname: $(hostname)" >> /var/log/obsidian-status.log
      echo "Public IP: $(curl -s http://checkip.amazonaws.com/)" >> /var/log/obsidian-status.log
      echo "Memory usage: $(free -h)" >> /var/log/obsidian-status.log
      echo "Disk usage: $(df -h /)" >> /var/log/obsidian-status.log
      echo "Active services: $(systemctl list-units --state=active --no-pager | wc -l)" >> /var/log/obsidian-status.log
    permissions: '0755'
    owner: root:root

# System configuration
bootcmd:
  # Ensure proper time sync
  - timedatectl set-ntp true
  - systemctl enable systemd-timesyncd

runcmd:
  # Update system packages
  - apt-get update
  - apt-get upgrade -y
  
  # Configure automatic security updates
  - echo 'Unattended-Upgrade::Automatic-Reboot "true";' >> /etc/apt/apt.conf.d/50unattended-upgrades
  - systemctl enable unattended-upgrades
  - systemctl start unattended-upgrades
  
  # Configure Git authentication
  - source /opt/obsidian-env
  - git config --global user.name "Obsidian CloudInit"
  - git config --global user.email "${ADMIN_EMAIL}"
  - echo "https://${GITHUB_PAT_TOKEN}@github.com" > /root/.git-credentials
  - git config --global credential.helper store
  
  # Clone repository and get bootstrap script
  - cd /tmp
  - git clone https://github.com/CallumWalton/obsidian-node.git
  - cd obsidian-node
  - cp obsidian_cnc_bootstrap.py /root/
  - chmod +x /root/obsidian_cnc_bootstrap.py
  
  # Run Python bootstrap script with environment variables
  - source /opt/obsidian-env
  - python3 /root/obsidian_cnc_bootstrap.py 2>&1 | tee /var/log/obsidian-bootstrap.log
  
  # Set up log rotation for bootstrap log
  - |
    cat > /etc/logrotate.d/obsidian << EOF
    /var/log/obsidian-*.log {
        daily
        rotate 30
        compress
        delaycompress
        missingok
        notifempty
        create 0644 root root
    }
    EOF
  
  # Create a simple status endpoint
  - /opt/system-monitor.sh
  - echo "*/5 * * * * /opt/system-monitor.sh" | crontab -
  
  # Restart SSH with new configuration
  - systemctl restart ssh
  
  # Final system status
  - systemctl status ssh >> /var/log/obsidian-status.log
  - systemctl status docker >> /var/log/obsidian-status.log
  
  # Send deployment notification (if SMTP is configured)
  - |
    if [[ -n "${ADMIN_EMAIL:-}" && -n "${SMTP_HOST:-}" ]]; then
      echo "Obsidian C&C Server deployed successfully at $(hostname) - $(date)" | \
      mail -s "Obsidian C&C Deployment Complete" "${ADMIN_EMAIL}" || true
    fi

# Final message
final_message: |
  Obsidian Command & Control Server deployment initiated via cloud-init.
  
  Monitor deployment progress:
  - Bootstrap log: /var/log/obsidian-bootstrap.log
  - System status: /var/log/obsidian-status.log
  - Cloud-init log: /var/log/cloud-init-output.log
  
  Once deployment completes (15-20 minutes), access your C&C server at:
  https://${DOMAIN}
  
  SSH access: ssh obsidian@<server-ip>
  
  Important: Complete the manual configuration steps described in the bootstrap log!

# Power state management
power_state:
  delay: "+1"
  mode: reboot
  message: "Rebooting after Obsidian C&C installation"
  condition: true
